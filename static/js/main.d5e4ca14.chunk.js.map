{"version":3,"sources":["logo.svg","components/ReusableComponents/InputControls/Text.jsx","components/ReusableComponents/InputControls/Radio.jsx","components/ReusableComponents/InputControls/CheckBox.jsx","components/ReusableComponents/InputControls/Button.jsx","components/ReusableComponents/Form/Form.jsx","components/Form/index.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Text","props","id","type","className","name","readOnly","noClass","value","placeholder","disabled","reference","pattern","onKeyPress","onKeyUp","onChange","onBlur","maxLength","required","onFocus","ref","Radio","autoFocus","checked","event","Checkbox","defaultValue","onClick","Button","style","children","Form","validateForm","isValid","console","log","state","fields","fieldArr","Object","keys","errorMessages","assign","forEach","fieldName","test","setState","handleHobbies","hobbies","handleSkills","skills","email","portfolioLink","gender","sports","programming","leadership","timeManagement","this","userData","specificUserData","htmlFor","e","target","CheckBox","preventDefault","updateFlag","updateFormData","data","index","handleClose","addFormData","history","push","React","Component","FormContainer","App","src","logo","alt","href","rel","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d5e4ca14.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\nconst Text = (props) => {\n  const {\n    id,\n    type,\n    className,\n    name,\n    readOnly,\n    noClass,\n    value,\n    placeholder,\n    disabled,\n    reference,\n    pattern,\n    onKeyPress,\n    onKeyUp,\n    onChange,\n    onBlur,\n    maxLength,\n    required,\n    onFocus,\n  } = props;\n  return (\n    <input\n      id={id ? id : \"\"}\n      type={type ? type : \"text\"}\n      className={noClass ? \"\" : className ? className : \"form-control\"}\n      name={name ? name : \"\"}\n      value={value ? value : \"\"}\n      placeholder={placeholder ? placeholder : \"\"}\n      disabled={disabled ? true : false}\n      ref={reference ? reference : null}\n      pattern={pattern ? pattern : null}\n      onKeyPress={onKeyPress ? onKeyPress : null}\n      onKeyUp={onKeyUp ? onKeyUp : null}\n      onChange={onChange ? onChange : null}\n      onBlur={onBlur ? onBlur : null}\n      readOnly={readOnly ? \"readonly\" : \"\"}\n      maxLength={maxLength ? maxLength : null}\n      required={required ? required : null}\n      onFocus={onFocus ? onFocus : null}\n    />\n  );\n};\n\nexport default Text;\n","import React from \"react\";\nconst Radio = (props) => {\n  const {\n    id,\n    type,\n    className,\n    name,\n    value,\n    autoFocus,\n    required,\n    checked,\n    readOnly,\n    noClass,\n    disabled,\n    reference,\n    onKeyPress,\n    onChange,\n    onBlur,\n  } = props;\n\n  return (\n    <input\n      id={id ? id : \"\"}\n      type={type ? type : \"radio\"}\n      name={name ? name : \"\"}\n      autoFocus={autoFocus ? true : false}\n      value={value ? value : \"\"}\n      required={required ? true : false}\n      checked={checked ? true : false}\n      className={noClass ? \"\" : className ? className : \"form-control\"}\n      disabled={disabled ? true : false}\n      ref={reference ? reference : null}\n      onKeyPress={onKeyPress ? onKeyPress : null}\n      onChange={(event) => (onChange ? onChange(event) : null)}\n      onBlur={onBlur ? onBlur : null}\n      readOnly={readOnly ? \"readonly\" : \"\"}\n    />\n  );\n};\n\nexport default Radio;\n","import React from \"react\";\nconst Checkbox = (props) => {\n  const {\n    id,\n    type,\n    className,\n    name,\n    defaultValue,\n    autoFocus,\n    required,\n    readOnly,\n    noClass,\n    disabled,\n    reference,\n    onKeyPress,\n    onChange,\n    onClick,\n    onBlur,\n    checked,\n  } = props;\n  return (\n    <input\n      id={id ? id : \"\"}\n      type={type ? type : \"checkbox\"}\n      defaultValue={defaultValue ? defaultValue : \"\"}\n      name={name ? name : \"\"}\n      autoFocus={autoFocus ? true : false}\n      required={required ? required : null}\n      className={noClass ? \"\" : className ? className : \"form-control\"}\n      disabled={disabled ? true : false}\n      ref={reference ? reference : null}\n      onKeyPress={onKeyPress ? onKeyPress : null}\n      onChange={onChange ? onChange : null}\n      onClick={onClick ? onClick : null}\n      onBlur={onBlur ? onBlur : null}\n      readOnly={readOnly ? \"readonly\" : \"\"}\n      checked={checked ? true : false}\n    />\n  );\n};\n\nexport default Checkbox;\n","import React from \"react\";\nconst Button = (props) => {\n  const {\n    id,\n    type,\n    className,\n    value,\n    noClass,\n    onClick,\n    style,\n    disabled,\n  } = props;\n  return (\n    <button\n      id={id ? id : \"\"}\n      type={type ? type : \"button\"}\n      className={noClass ? \"\" : className ? \"btn \" + className : \"btn\"}\n      onClick={onClick ? onClick : null}\n      style={style || null}\n      value={value || null}\n      disabled={disabled ? true : false}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\n// import { connect } from \"react-redux\";\n// import { withRouter } from \"react-router-dom\";\nimport Text from \"../InputControls/Text.jsx\";\nimport Radio from \"../InputControls/Radio.jsx\";\nimport CheckBox from \"../InputControls/CheckBox.jsx\";\nimport Button from \"../InputControls/Button.jsx\";\n// import * as actions from \"../../../actions/index.js\";\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fields: {\n        name: \"\",\n        email: \"\",\n        portfolioLink: \"\",\n        gender: \"\",\n        hobbies: { sports: false, programming: false },\n        skills: { leadership: false, timeManagement: false },\n      },\n      errorMessages: {\n        name: \"\",\n        email: \"\",\n        portfolioLink: \"\",\n        gender: \"\",\n      },\n    };\n  }\n\n  validateForm = () => {\n    let isValid = true;\n    console.log(this.state.fields);\n\n    let fieldArr = Object.keys(this.state.errorMessages);\n    let errorMessages = Object.assign({}, this.state.errorMessages);\n    let emailPattern = /[a-zA-Z0-9._%-]+@[a-zA-Z0-9-]+\\.[a-zA-Z]{2,4}/;\n\n    fieldArr.forEach((fieldName) => {\n      if (!this.state.fields[fieldName]) {\n        errorMessages[fieldName] = \"Please enter a value.\";\n        isValid = false;\n      }\n    });\n    if (\n      this.state.fields[\"email\"] &&\n      !emailPattern.test(this.state.fields[\"email\"])\n    ) {\n      errorMessages[\"email\"] = \"Please enter a valid value.\";\n      isValid = false;\n    }\n    this.setState({\n      errorMessages,\n    });\n    return isValid;\n  };\n\n  handleHobbies = (value) => {\n    let fields = { ...this.state.fields };\n    fields.hobbies[value] = !fields.hobbies[value];\n    this.setState({ fields });\n    console.log(this.state.fields.hobbies);\n  };\n  handleSkills = (value) => {\n    let fields = { ...this.state.fields };\n\n    fields.skills[value] = !fields.skills[value];\n    this.setState({ fields });\n  };\n\n  componentDidMount() {\n    if (this.props.userData && this.props.specificUserData) {\n      // let fields={...this.state.fields};\n      this.setState({ fields: this.props.specificUserData });\n    }\n  }\n\n  render() {\n    return (\n      <form>\n        <div>\n          <div className=\"form-group\">\n            <label htmlFor=\"name\">Enter Name</label>\n            <Text\n              type=\"text\"\n              className=\"form-control\"\n              id=\"name\"\n              placeholder=\"Enter name\"\n              onChange={(e) => {\n                let fields = { ...this.state.fields };\n                fields[\"name\"] = e.target.value;\n\n                let errorMessages = { ...this.state.errorMessages };\n                errorMessages[\"name\"] = \"\";\n                this.setState({ fields, errorMessages });\n              }}\n              value={this.state.fields.name}\n            />\n            {this.state.errorMessages[\"name\"] && (\n              <p className=\"errorMessage\">{this.state.errorMessages[\"name\"]}</p>\n            )}\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"email\">Email address</label>\n            <Text\n              type=\"email\"\n              className=\"form-control\"\n              id=\"email\"\n              placeholder=\"Enter email\"\n              onChange={(e) => {\n                let fields = { ...this.state.fields };\n                fields[\"email\"] = e.target.value;\n                let errorMessages = { ...this.state.errorMessages };\n                errorMessages[\"email\"] = \"\";\n                this.setState({ fields, errorMessages });\n              }}\n              value={this.state.fields.email}\n            />\n            {this.state.errorMessages[\"email\"] && (\n              <p className=\"errorMessage\">\n                {this.state.errorMessages[\"email\"]}\n              </p>\n            )}\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"portfolioLink\">Portfolio Link</label>\n            <Text\n              type=\"text\"\n              className=\"form-control\"\n              id=\"portfolioLink\"\n              placeholder=\"Enter portfolio link\"\n              onChange={(e) => {\n                let fields = { ...this.state.fields };\n                fields[\"portfolioLink\"] = e.target.value;\n                let errorMessages = { ...this.state.errorMessages };\n                errorMessages[\"portfolioLink\"] = \"\";\n                this.setState({ fields, errorMessages });\n              }}\n              value={this.state.fields.portfolioLink}\n            />\n            {this.state.errorMessages[\"portfolioLink\"] && (\n              <p className=\"errorMessage\">\n                {this.state.errorMessages[\"portfolioLink\"]}\n              </p>\n            )}\n          </div>\n\n          <div className=\"form-group\">\n            <h5>Gender</h5>\n            <div className=\"form-check\">\n              <label className=\"form-check-label\">\n                <Radio\n                  type=\"radio\"\n                  className=\"form-check-input\"\n                  name=\"optionsRadios\"\n                  id=\"optionsRadios1\"\n                  defaultValue=\"option1\"\n                  onChange={() => {\n                    let fields = { ...this.state.fields };\n                    fields[\"gender\"] = \"male\";\n                    let errorMessages = { ...this.state.errorMessages };\n                    errorMessages[\"gender\"] = \"\";\n                    this.setState({ fields, errorMessages });\n                  }}\n                  checked={this.state.fields.gender === \"male\" ? true : false}\n                />\n                Male\n              </label>\n            </div>\n            <div className=\"form-check\">\n              <label className=\"form-check-label\">\n                <Radio\n                  type=\"radio\"\n                  className=\"form-check-input\"\n                  name=\"optionsRadios\"\n                  id=\"optionsRadios2\"\n                  defaultValue=\"option2\"\n                  onChange={() => {\n                    let fields = { ...this.state.fields };\n                    fields[\"gender\"] = \"female\";\n                    let errorMessages = { ...this.state.errorMessages };\n                    errorMessages[\"gender\"] = \"\";\n                    this.setState({ fields, errorMessages });\n                  }}\n                  checked={this.state.fields.gender === \"female\" ? true : false}\n                />\n                Female\n              </label>\n            </div>\n            <div className=\"form-check \">\n              <label className=\"form-check-label\">\n                <Radio\n                  type=\"radio\"\n                  className=\"form-check-input\"\n                  name=\"optionsRadios\"\n                  id=\"optionsRadios3\"\n                  defaultValue=\"option3\"\n                  onChange={() => {\n                    let fields = { ...this.state.fields };\n                    fields[\"gender\"] = \"others\";\n                    let errorMessages = { ...this.state.errorMessages };\n                    errorMessages[\"gender\"] = \"\";\n                    this.setState({ fields, errorMessages });\n                  }}\n                  checked={this.state.fields.gender === \"others\" ? true : false}\n                />\n                Others\n              </label>\n            </div>\n            {this.state.errorMessages[\"gender\"] && (\n              <p className=\"errorMessage\">\n                {this.state.errorMessages[\"gender\"]}\n              </p>\n            )}\n          </div>\n\n          <div className=\"row form-group\">\n            <div className=\"col-md-6\">\n              <h6 className=\"\">Hobbies</h6>\n              <div className=\"form-check\">\n                <label className=\"form-check-label\">\n                  <CheckBox\n                    className=\"form-check-input\"\n                    type=\"checkbox\"\n                    onChange={() => {\n                      this.handleHobbies(\"sports\");\n                    }}\n                    checked={this.state.fields.hobbies[\"sports\"]}\n                  />\n                  Sports\n                </label>\n              </div>\n              <div className=\"form-check disabled\">\n                <label className=\"form-check-label\">\n                  <CheckBox\n                    className=\"form-check-input\"\n                    type=\"checkbox\"\n                    onChange={() => {\n                      this.handleHobbies(\"programming\");\n                    }}\n                    checked={this.state.fields.hobbies[\"programming\"]}\n                  />\n                  Computer Programming\n                </label>\n              </div>\n            </div>\n            <div className=\"col-md-6\">\n              <h6>Skills</h6>\n              <div className=\"form-check\">\n                <label className=\"form-check-label\">\n                  <CheckBox\n                    className=\"form-check-input\"\n                    type=\"checkbox\"\n                    onChange={() => {\n                      this.handleSkills(\"leadership\");\n                    }}\n                    checked={this.state.fields.skills[\"leadership\"]}\n                  />\n                  Leadership\n                </label>\n              </div>\n              <div className=\"form-check disabled\">\n                <label className=\"form-check-label\">\n                  <CheckBox\n                    className=\"form-check-input\"\n                    type=\"checkbox\"\n                    onChange={() => {\n                      this.handleSkills(\"timeManagement\");\n                    }}\n                    checked={this.state.fields.skills[\"timeManagement\"]}\n                  />\n                  Time management\n                </label>\n              </div>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-md-4\"></div>\n            <div className=\"col-md-4\">\n              <Button\n                type=\"submit\"\n                className=\"btn btn-primary\"\n                onClick={(e) => {\n                  e.preventDefault();\n                  console.log(this.state);\n\n                  if (this.validateForm()) {\n                    if (this.props.updateFlag) {\n                      this.props.updateFormData({\n                        data: this.state.fields,\n                        index: this.props.index,\n                      });\n                      this.props.handleClose();\n                    } else {\n                      this.props.addFormData(this.state.fields);\n                    }\n                    this.props.history.push(\"/table\");\n                  }\n                }}\n              >\n                {this.props.updateFlag ? \"Update\" : \"Submit\"}\n              </Button>\n            </div>\n            <div className=\"col-md-4\"></div>\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\nexport default Form;\n\n// const mapStateToProps = (state) => {\n//   console.log(\"userdata\", state.Form.userData);\n//   return {\n//     userData: state.Form.userData,\n//   };\n// };\n// const mapDispatchToProps = (dispatch) => ({\n//   addFormData: (data) => dispatch(actions.formRequest(data)),\n//   updateFormData: (data) => dispatch(actions.updateFormData(data)),\n// });\n// export default withRouter(connect(mapStateToProps, mapDispatchToProps)(Form));\n","import React from \"react\";\nimport Form from \"../ReusableComponents/Form/Form.jsx\";\n// import Layout from \"../../containers/Layout.jsx\";\nconst FormContainer = () => {\n  return (\n    <div className=\"overflow-hidden\">\n      <div className=\"row mt-5\">\n        <div className=\"col-md-4\"></div>\n        <div className=\"col-md-4\">\n          <h4 className=\"text-center\">Hubilo - Demo</h4>\n          <Form />\n        </div>\n        <div className=\"col-md-4\"></div>\n      </div>\n    </div>\n  );\n};\n\nexport default FormContainer;\n// export default Layout(FormContainer);\n","import React from 'react';\nimport logo from './logo.svg';\nimport './assets/css/App.css';\nimport Form from \"./components/Form/index.jsx\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Form/>\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n        \n      </header>\n      <h6>DEVELOPED BY TONIGHT DEVELOPERS</h6>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}